{"mappings":"AASA,MAAMA,EAAmBC,SAASC,cAAc,oBAC1CC,EAAaF,SAASC,cAAc,sBACpCE,EAAcH,SAASC,cAAc,mBACrCG,EAAeJ,SAASC,cAAc,oBACtCI,EAAiBL,SAASC,cAAc,sBACxCK,EAAiBN,SAASC,cAAc,sBAE9C,IAAIM,EAAe,KAEnBL,EAAWM,UAAW,EAEtB,MAAMC,EAAU,CACdC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIC,KACjBC,gBAAiB,EACjBC,QAAQC,GACNC,QAAQC,IAAIF,EAAc,IACtBA,EAAc,GAAK,IAAIH,KAEzBM,SAASC,OAAOC,QAAQ,sCAExBnB,EAAWM,UAAW,C,GA0B5B,SAASc,EAAeC,GACtB,OAAIA,EAAQ,GAAWA,EAAMC,WAAWC,SAAS,EAAG,KAC7CF,C,CAvBTG,UAAU3B,EAAkBU,GA4C5BP,EAAWyB,iBAAiB,SAlB5B,WACEpB,EAAeqB,aAAY,KACzB,MAAMC,EAAe9B,EAAiBwB,MAChCO,EAAa,IAAIjB,KAAKgB,GAAcE,UAC1Cd,QAAQC,IAAIY,GACZ,MAAME,GAAc,IAAInB,MAAOkB,UAC/Bd,QAAQC,IAAIc,GACZ,MAAMC,EAAYH,EAAaE,EAC/Bf,QAAQC,IAAIe,GACZ,MAAMC,EAjCV,SAAmBC,GAEjB,MACMC,EAASC,IACTC,EAAOF,KACPG,EAAa,GAAPD,EAWZ,MAAO,C,KARME,KAAKC,MAAMN,EAAKI,G,MAEfC,KAAKC,MAAMN,EAAMI,EAAOD,G,QAEtBE,KAAKC,MAAMN,EAAOI,EAAOD,EAAQF,G,QAEjCI,KAAKC,MAAMN,EAAQI,EAAOD,EAAQF,EAZnC,K,CA+BAM,CAAUT,GACvBhB,QAAQC,IAAIgB,GACZ/B,EAAYwC,YAAc,GAAGrB,EAAeY,EAAKU,QACjDxC,EAAauC,YAAc,GAAGrB,EAAeY,EAAKW,SAClDxC,EAAesC,YAAc,GAAGrB,EAAeY,EAAKY,WACpDxC,EAAeqC,YAAc,GAAGrB,EAAeY,EAAKa,UAAU,GAC7D,I","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\n\nconst DateTimePickerEl = document.querySelector('#datetime-picker');\nconst startBtnEl = document.querySelector('button[data-start]');\nconst daysValueEl = document.querySelector('span[data-days]');\nconst hoursValueEl = document.querySelector('span[data-hours]');\nconst minutesValueEl = document.querySelector('span[data-minutes]');\nconst secondsValueEl = document.querySelector('span[data-seconds]');\n\nlet timerRefresh = null;\n\nstartBtnEl.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n    if (selectedDates[0] < new Date()) {\n      //   return alert(\"Please choose a date in the future\");\n      Notiflix.Notify.failure('Please choose a date in the future');\n    } else {\n      startBtnEl.disabled = false;\n    }\n  },\n};\n\nflatpickr(DateTimePickerEl, options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  if (value < 10) return value.toString().padStart(2, '0');\n  return value;\n}\n\nfunction startTimer() {\n  timerRefresh = setInterval(() => {\n    const selectedDate = DateTimePickerEl.value;\n    const targetDate = new Date(selectedDate).getTime();\n    console.log(targetDate);\n    const currentDate = new Date().getTime();\n    console.log(currentDate);\n    const deltaTime = targetDate - currentDate;\n    console.log(deltaTime);\n    const time = convertMs(deltaTime);\n    console.log(time);\n    daysValueEl.textContent = `${addLeadingZero(time.days)}`;\n    hoursValueEl.textContent = `${addLeadingZero(time.hours)}`;\n    minutesValueEl.textContent = `${addLeadingZero(time.minutes)}`;\n    secondsValueEl.textContent = `${addLeadingZero(time.seconds)}`;\n  }, 1000);\n}\n\nstartBtnEl.addEventListener('click', startTimer);"],"names":["$47d4ff9957288465$var$DateTimePickerEl","document","querySelector","$47d4ff9957288465$var$startBtnEl","$47d4ff9957288465$var$daysValueEl","$47d4ff9957288465$var$hoursValueEl","$47d4ff9957288465$var$minutesValueEl","$47d4ff9957288465$var$secondsValueEl","$47d4ff9957288465$var$timerRefresh","disabled","$47d4ff9957288465$var$options","enableTime","time_24hr","defaultDate","Date","minuteIncrement","onClose","selectedDates","console","log","Notiflix","Notify","failure","$47d4ff9957288465$var$addLeadingZero","value","toString","padStart","flatpickr","addEventListener","setInterval","selectedDate","targetDate","getTime","currentDate","deltaTime","time","ms","minute","second","hour","day","Math","floor","$47d4ff9957288465$var$convertMs","textContent","days","hours","minutes","seconds"],"version":3,"file":"03-promises.b7e19b6d.js.map"}